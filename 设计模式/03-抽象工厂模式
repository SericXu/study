## 抽象工厂模式

与简单工厂模式的共同点：

- **尝试去分离一个系统中变与不变的部分**

不同在于**==场景的复杂度==**

简单工厂的使用场景里，处理的对象是类，并且是一些非常好对付的类——它们的共性容易抽离，同时因为逻辑本身比较简单，故而不苛求代码可扩展性。抽象工厂本质上处理的其实也是类，但是是一帮非常棘手、繁杂的类，这些类中不仅能划分出门派，还能划分出等级，同时存在着千变万化的扩展可能性。

抽象工厂模式是对比较复杂的场景进行类的性质的划分，可分成四个：

- **抽象工厂（抽象类，用于约束，制定规范）**
- **具体工厂（继承自抽象工厂，实现抽象工厂的方法）**
- **抽象产品（抽象类）**
- **具体产品**



==抽象工厂模式的定义，是**围绕一个超级工厂创建其他工厂**。==

抽象工厂模式很好的解释了***开放封闭原则***



----
